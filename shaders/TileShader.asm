
//listing of all techniques and passes with embedded asm listings 

technique Technique1
{
    pass Pass1
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
    pass Pass2
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.yz, r2.y, r1.y
                mov r0.x, r2.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass3
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r0.x, r1.w, r1.x, r1.z
                cmp r0.y, r1.w, r1.z, r1.x
                min r2.w, r0.y, r1.y
                add r1.x, r0.x, r2.w
                mov r0.z, r2.w
                mul r0.y, r1.x, v0.y
                mov r1.xzw, v0
                mov r1.y, c0.x
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass4
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.z, r2.y, r1.y
                mov r0.xy, r2.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass5
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.z, r2.y, r1.y
                add r1.x, r2.x, r0.z
                mov r0.y, r2.x
                mul r0.x, r1.x, v0.x
                mov r1.x, c0.x
                mov r1.yzw, v0
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass6
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.xz, r2.y, r1.y
                mov r0.y, r2.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass7
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.x, r2.y, r1.y
                add r1.x, r2.x, r0.x
                mov r0.y, r2.x
                mul r0.z, r1.x, v0.z
                mov r1.xyw, v0
                mov r1.z, c0.x
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass8
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.x, r2.y, r1.y
                mov r0.yz, r2.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass9
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.x, r2.y, r1.y
                add r1.x, r2.x, r0.x
                mov r0.z, r2.x
                mul r0.y, r1.x, v0.y
                mov r1.xzw, v0
                mov r1.y, c0.x
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass10
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.xy, r2.y, r1.y
                mov r0.z, r2.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass11
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.y, r2.y, r1.y
                add r1.x, r2.x, r0.y
                mov r0.z, r2.x
                mul r0.x, r1.x, v0.x
                mov r1.x, c0.x
                mov r1.yzw, v0
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass12
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r0.y, r2.y, r1.y
                mov r0.xz, r2.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass13
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r0.x, r1.w, r1.x, r1.z
                cmp r0.y, r1.w, r1.z, r1.x
                min r2.w, r0.y, r1.y
                add r1.x, r0.x, r2.w
                mov r0.y, r2.w
                mul r0.z, r1.x, v0.z
                mov r1.xyw, v0
                mov r1.z, c0.x
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass14
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r0.x, r1.w, r1.x, r1.z
                cmp r0.y, r1.w, r1.z, r1.x
                min r2.w, r0.y, r1.y
                mul r0.yz, r2.w, c0.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass15
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0.5, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r0.x, r1.w, r1.x, r1.z
                cmp r0.y, r1.w, r1.z, r1.x
                min r2.w, r0.y, r1.y
                mad r1.x, r2.w, c0.x, r0.x
                mul r0.z, r2.w, c0.x
                mul r0.y, r1.x, v0.y
                mov r1.xzw, v0
                mov r1.y, c0.y
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass16
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mov r0.xy, r2.x
                mul r0.z, r3.w, v0.z
                mov r1.xyw, v0
                mov r1.z, c0.x
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 14 instruction slots used (1 texture, 13 arithmetic)
            };
    }
    pass Pass17
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0.5, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mad r1.x, r3.w, c0.x, r2.x
                mul r0.z, r3.w, c0.x
                mov r0.y, r2.x
                mul r0.x, r1.x, v0.x
                mov r1.x, c0.y
                mov r1.yzw, v0
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 16 instruction slots used (1 texture, 15 arithmetic)
            };
    }
    pass Pass18
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mov r0.y, r2.x
                mul r0.xz, r3.w, c0.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 12 instruction slots used (1 texture, 11 arithmetic)
            };
    }
    pass Pass19
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0.5, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mad r1.x, r3.w, c0.x, r2.x
                mul r0.x, r3.w, c0.x
                mov r0.y, r2.x
                mul r0.z, r1.x, v0.z
                mov r1.xyw, v0
                mov r1.z, c0.y
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 16 instruction slots used (1 texture, 15 arithmetic)
            };
    }
    pass Pass20
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mov r0.yz, r2.x
                mul r0.x, r3.w, v0.x
                mov r1.x, c0.x
                mov r1.yzw, v0
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 14 instruction slots used (1 texture, 13 arithmetic)
            };
    }
    pass Pass21
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0.5, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mad r1.x, r3.w, c0.x, r2.x
                mul r0.x, r3.w, c0.x
                mov r0.z, r2.x
                mul r0.y, r1.x, v0.y
                mov r1.xzw, v0
                mov r1.y, c0.y
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 16 instruction slots used (1 texture, 15 arithmetic)
            };
    }
    pass Pass22
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mov r0.z, r2.x
                mul r0.xy, r3.w, c0.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 12 instruction slots used (1 texture, 11 arithmetic)
            };
    }
    pass Pass23
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0.5, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mad r1.x, r3.w, c0.x, r2.x
                mul r0.y, r3.w, c0.x
                mov r0.z, r2.x
                mul r0.x, r1.x, v0.x
                mov r1.x, c0.y
                mov r1.yzw, v0
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 16 instruction slots used (1 texture, 15 arithmetic)
            };
    }
    pass Pass24
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mov r0.xz, r2.x
                mul r0.y, r3.w, v0.y
                mov r1.xzw, v0
                mov r1.y, c0.x
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 14 instruction slots used (1 texture, 13 arithmetic)
            };
    }
    pass Pass25
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.400000006, 0.5, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r0.x, r1.w, r1.x, r1.z
                cmp r0.y, r1.w, r1.z, r1.x
                min r2.w, r0.y, r1.y
                mad r1.x, r2.w, c0.x, r0.x
                mul r0.y, r2.w, c0.x
                mul r0.z, r1.x, v0.z
                mov r1.xyw, v0
                mov r1.z, c0.y
                mul r0, r0, r1
                mov oC0, r0
            
            // approximately 15 instruction slots used (1 texture, 14 arithmetic)
            };
    }
    pass Pass26
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.150000006, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                add r1.x, r2.x, r3.w
                mul r0.xyz, r1.x, c0.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 12 instruction slots used (1 texture, 11 arithmetic)
            };
    }
    pass Pass27
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 2, 0, 0
                def c1, 3, 7, 0.100000001, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                mul r1.x, r3.w, c1.x
                add r1.y, r2.x, r3.w
                mad r1.x, r2.x, c1.y, r1.x
                mul r1.x, r1.x, c1.z
                mad r1.y, r1.y, -c0.x, c0.y
                mul r0.xyz, r1.x, r1.y
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 16 instruction slots used (1 texture, 15 arithmetic)
            };
    }
    pass Pass28
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.5, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                add r1.x, r2.x, r3.w
                mul r0.xyz, r1.x, c0.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 12 instruction slots used (1 texture, 11 arithmetic)
            };
    }
    pass Pass29
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.yz, r3.y, r2.y
                mov r4.x, r3.x
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 49 instruction slots used (1 texture, 48 arithmetic)
            };
    }
    pass Pass30
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0.5, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r1.y, r3.y, r2.y
                add r3.w, r3.x, r1.y
                mov r3.z, r1.y
                mul r3.y, r3.w, c7.z
                cmp r0.xyz, -r1.x, r0, r3
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 51 instruction slots used (1 texture, 50 arithmetic)
            };
    }
    pass Pass31
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.z, r3.y, r2.y
                mov r4.xy, r3.x
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 49 instruction slots used (1 texture, 48 arithmetic)
            };
    }
    pass Pass32
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0.5, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.z, r3.y, r2.y
                add r4.w, r3.x, r4.z
                mov r4.y, r3.x
                mul r4.x, r4.w, c7.z
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 51 instruction slots used (1 texture, 50 arithmetic)
            };
    }
    pass Pass33
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.xz, r3.y, r2.y
                mov r4.y, r3.x
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 49 instruction slots used (1 texture, 48 arithmetic)
            };
    }
    pass Pass34
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0.5, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.x, r3.y, r2.y
                add r4.w, r3.x, r4.x
                mov r4.y, r3.x
                mul r4.z, r4.w, c7.z
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 51 instruction slots used (1 texture, 50 arithmetic)
            };
    }
    pass Pass35
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.x, r3.y, r2.y
                mov r4.yz, r3.x
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 49 instruction slots used (1 texture, 48 arithmetic)
            };
    }
    pass Pass36
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0.5, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.x, r3.y, r2.y
                add r4.w, r3.x, r4.x
                mov r4.z, r3.x
                mul r4.y, r4.w, c7.z
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 51 instruction slots used (1 texture, 50 arithmetic)
            };
    }
    pass Pass37
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.xy, r3.y, r2.y
                mov r4.z, r3.x
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 49 instruction slots used (1 texture, 48 arithmetic)
            };
    }
    pass Pass38
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0.5, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.y, r3.y, r2.y
                add r4.w, r3.x, r4.y
                mov r4.z, r3.x
                mul r4.x, r4.w, c7.z
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 51 instruction slots used (1 texture, 50 arithmetic)
            };
    }
    pass Pass39
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r4.y, r3.y, r2.y
                mov r4.xz, r3.x
                cmp r0.xyz, -r1.x, r0, r4
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 49 instruction slots used (1 texture, 48 arithmetic)
            };
    }
    pass Pass40
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   bool invertSpecialGroupResult;
            //   float leafHueTestOffset;
            //   float leafMaxHue;
            //   float leafMaxSat;
            //   float leafMinHue;
            //   float leafMinSat;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name                     Reg   Size
            //   ------------------------ ----- ----
            //   leafMinHue               c0       1
            //   leafMaxHue               c1       1
            //   leafMinSat               c2       1
            //   leafMaxSat               c3       1
            //   leafHueTestOffset        c4       1
            //   invertSpecialGroupResult c5       1
            //   s0                       s0       1
            //
            
                ps_2_0
                def c6, 6, 2, 4, 0.166666672
                def c7, 1, 0, 0.5, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r2.x, r0.x, r1.x
                add r1.x, -r2.w, r2.x
                rcp r1.y, r1.x
                add r3.xyz, -r0.zxyw, r2.x
                mul r2.yzw, r1.y, r3.wzyx
                mad r3.x, r3.x, r1.y, -r2.y
                mad r3.y, r3.y, r1.y, -r2.w
                mad r3.z, r3.z, r1.y, -r2.z
                add r1.yzw, r3.wzyx, c6.wzyx
                add r2.yzw, r0.wzyx, -r2.x
                rcp r2.x, r2.x
                mul r3.y, r1.x, r2.x
                mul r1.x, r1.x, r1.x
                cmp r2.xyz, r2.wzyx, c7.x, c7.y
                mul r1.yzw, r1, r2.wzyx
                max r2.x, r1.y, r1.w
                max r3.z, r1.z, r2.x
                mul r1.y, r3.z, c6.w
                frc r3.x, r1.y
                cmp r1.xy, -r1.x, c7.y, r3
                add r1.z, -r1.y, c3.x
                cmp r1.z, r1.z, c7.x, c7.y
                add r1.y, r1.y, -c2.x
                add r1.x, r1.x, c4.x
                cmp r1.y, r1.y, r1.z, c7.y
                abs r1.z, r1.x
                frc r1.z, r1.z
                cmp r1.x, r1.x, r1.z, -r1.z
                add r1.z, -r1.x, c1.x
                add r1.x, r1.x, -c0.x
                cmp r1.y, r1.z, r1.y, c7.y
                cmp r1.x, r1.x, r1.y, c7.y
                cmp r1.y, -r1.x, c7.x, c7.y
                cmp r1.x, -c5.x, r1.x, r1.y
                max r2.x, r0.x, r0.y
                min r2.y, r0.y, r0.x
                add r2.w, -r0.z, r2.x
                mov r2.z, r0.z
                cmp r3.x, r2.w, r2.x, r2.z
                cmp r3.y, r2.w, r2.z, r2.x
                min r1.y, r3.y, r2.y
                add r3.w, r3.x, r1.y
                mov r3.y, r1.y
                mul r3.z, r3.w, c7.z
                cmp r0.xyz, -r1.x, r0, r3
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 51 instruction slots used (1 texture, 50 arithmetic)
            };
    }
    pass Pass41
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0, 0.699999988, 0.49000001, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mov r1.xw, v0
                mov r1.yz, c0
                max r2.w, r0.x, r0.y
                max r3.x, r2.w, r0.z
                mov r3.w, r0.w
                mul r3.y, r3.x, v0.y
                mul r3.z, r3.x, v0.z
                mul r0, r1, r3
                mov oC0, r0
            
            // approximately 10 instruction slots used (1 texture, 9 arithmetic)
            };
    }
    pass Pass42
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 0.0250000004, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.x, r0.x, r0.y
                min r1.y, r0.y, r0.x
                add r1.w, -r0.z, r1.x
                mov r1.z, r0.z
                cmp r2.x, r1.w, r1.x, r1.z
                cmp r2.y, r1.w, r1.z, r1.x
                min r3.w, r2.y, r1.y
                add r1.x, r2.x, r3.w
                mul r0.xyz, r1.x, c0.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 12 instruction slots used (1 texture, 11 arithmetic)
            };
    }
    pass Pass43
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 1, 0, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.w, r0.x, r0.y
                max r2.w, r1.w, r0.z
                add r1.x, -r0.x, c0.x
                cmp r0.x, -r2.w, r0.x, r1.x
                add r1.x, -r0.y, c0.x
                cmp r0.y, -r2.w, r0.y, r1.x
                add r1.x, -r0.z, c0.x
                cmp r0.z, -r2.w, r0.z, r1.x
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
    pass Pass44
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 2, 0.75, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.w, r0.x, r0.y
                max r2.w, r1.w, r0.z
                add r1.x, r0.x, r0.x
                mad r1.y, r0.x, -c0.x, c0.y
                cmp r1.x, -r2.w, r1.x, r1.y
                max r0.x, r1.x, c0.z
                add r1.x, r0.y, r0.y
                mad r1.y, r0.y, -c0.x, c0.y
                cmp r1.x, -r2.w, r1.x, r1.y
                max r0.y, r1.x, c0.z
                add r1.x, r0.z, r0.z
                mad r1.y, r0.z, -c0.x, c0.y
                cmp r1.x, -r2.w, r1.x, r1.y
                max r0.z, r1.x, c0.z
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 17 instruction slots used (1 texture, 16 arithmetic)
            };
    }
    pass Pass45
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                def c0, 6, 2, 4, 0.166666672
                def c1, 1, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                min r1.w, r0.z, r0.y
                min r2.w, r1.w, r0.x
                max r1.x, r0.y, r0.z
                max r3.z, r0.x, r1.x
                add r1.x, -r2.w, r3.z
                rcp r1.y, r1.x
                add r2.xyz, -r0.zxyw, r3.z
                mul r4.xyz, r1.y, r2
                mad r2.xyz, r2, r1.y, -r4.zxyw
                add r1.yzw, r2.wzyx, c0.wzyx
                add r0.xyz, r0, -r3.z
                mov r3.w, r0.w
                cmp r0.xyz, r0, c1.x, c1.y
                mul r0.xyz, r1.wzyx, r0
                max r1.y, r0.z, r0.x
                max r2.x, r0.y, r1.y
                mul r0.x, r2.x, c0.w
                frc r0.x, r0.x
                rcp r0.z, r3.z
                mul r0.y, r1.x, r0.z
                mul r0.z, r1.x, r1.x
                cmp r3.xy, -r0.z, c1.y, r0
                mov oC0, r3
            
            // approximately 24 instruction slots used (1 texture, 23 arithmetic)
            };
    }
}

